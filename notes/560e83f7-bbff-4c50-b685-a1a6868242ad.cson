createdAt: "2020-06-10T04:06:15.176Z"
updatedAt: "2020-06-10T04:06:49.022Z"
type: "MARKDOWN_NOTE"
folder: "ff82907153aa97c03b03"
title: "mybatisplus 自动代码"
tags: []
content: '''
  # mybatisplus 自动代码
         
         package cn.saytime.util;
  
          import com.baomidou.mybatisplus.generator.AutoGenerator;
          import com.baomidou.mybatisplus.generator.config.DataSourceConfig;
          import com.baomidou.mybatisplus.generator.config.GlobalConfig;
          import com.baomidou.mybatisplus.generator.config.PackageConfig;
          import com.baomidou.mybatisplus.generator.config.StrategyConfig;
          import com.baomidou.mybatisplus.generator.config.rules.DbType;
          import com.baomidou.mybatisplus.generator.config.rules.NamingStrategy;
  
          /**
           * @author zh
           * @ClassName cn.aduu.util.Generator
           * @Description
           * @date 2018-02-22 11:37:14
           */
          public class Generator {
  
            public static void main(String[] args) {
              String packageName = "cn.saytime";
              boolean serviceNameStartWithI = false;//auth -> UserService, 设置成true: auth -> IUserService
              generateByTables(serviceNameStartWithI, packageName, "saytime", "test", "user");
  
              System.out.println("completed...");
            }
  
            /**
             * @param serviceNameStartWithI
             * @param packageName   包名
             * @param author  作者
             * @param database  数据库名
             * @param tableNames 表名
             */
            private static void generateByTables(boolean serviceNameStartWithI, String packageName, String author, String database, String... tableNames) {
              GlobalConfig config = new GlobalConfig();
              String dbUrl = "jdbc:mysql://127.0.0.1:3306/" + database + "?useUnicode=true&characterEncoding=utf8&autoReconnect=true&useSSL=false";
              DataSourceConfig dataSourceConfig = new DataSourceConfig();
              dataSourceConfig.setDbType(DbType.MYSQL)
                  .setUrl(dbUrl)
                  .setUsername("root")
                  .setPassword("root")
                  .setDriverName("com.mysql.jdbc.Driver");
              StrategyConfig strategyConfig = new StrategyConfig();
              strategyConfig
                  .setCapitalMode(true)
                  .setEntityLombokModel(false)
                  .setDbColumnUnderline(true)
                  .setNaming(NamingStrategy.underline_to_camel)
          //				.setSuperMapperClass("cn.saytime.mapper.BaseMapper")
                  .setInclude(tableNames);//修改替换成你需要的表名，多个表名传数组
              config.setActiveRecord(false)
                  .setAuthor(author)
                  .setOutputDir("e:\\\\codeGen")
                  .setFileOverride(true)
                  .setEnableCache(false);
              if (!serviceNameStartWithI) {
                config.setServiceName("%sService");
              }
              new AutoGenerator().setGlobalConfig(config)
                  .setDataSource(dataSourceConfig)
                  .setStrategy(strategyConfig)
                  .setPackageInfo(
                      new PackageConfig()
                          .setParent(packageName)
                          .setController("web")
                          .setEntity("model")
                          .setMapper("mapper")
                          .setService("service")
                          .setServiceImpl("service.impl")
                          .setXml("mybatis.mappers")
                  ).execute();
            }
  
          }
'''
linesHighlighted: []
isStarred: false
isTrashed: false
